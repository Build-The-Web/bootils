#############################################################################
# Tomcat8 Service Configuration
#############################################################################

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperStartStopApp

# Auto restart after normal kill java
wrapper.disable_shutdown_hook=true


#############################################################################
# Java Startup Classpath (JARs or class directories)
wrapper.java.classpath.100=/opt/tomcat8/bin/bootstrap.jar
wrapper.java.classpath.101=/opt/tomcat8/bin/tomcat-juli.jar


#############################################################################
# Java Library Path (native libraries)
wrapper.java.library.path.100=
wrapper.java.library.path.101=


#############################################################################
# Java Additional Parameters
wrapper.java.additional.100=-Djava.io.tmpdir=/var/run/%JSW_SERVICE_NAME%/tmp
wrapper.java.additional.101=-Dcatalina.home=/opt/tomcat8
##wrapper.java.additional.102=-Dcatalina.base=/var/lib/%JSW_SERVICE_NAME%
##wrapper.java.additional.103=-Dcatalina.config=file:/etc/%JSW_SERVICE_NAME%/conf/catalina.properties
wrapper.java.additional.104=-Dorg.apache.catalina.HTTP_ONLY_SESSION_COOKIE=true
wrapper.java.additional.105=-Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
wrapper.java.additional.106=-Dorg.apache.juli.logging.diagnostics.dest=/var/log/%JSW_SERVICE_NAME%/juli-debug.log

# Heapdump on "Out of memory"
##wrapper.java.additional.110=-XX:+HeapDumpOnOutOfMemoryError
##wrapper.java.additional.111=-XX:HeapDumpPath=/var/run/%JSW_SERVICE_NAME%/tomcat.hprof


#############################################################################
# Application parameters (arguments to main class)
# Add elements as needed starting from 1!

# The first application parameter is the name of the class whose main
# method is to be called when the application is launched.  The class
# name is followed by the number of parameters to be passed to its main
# method.  Then comes the actual parameters.
wrapper.app.parameter.1=org.apache.catalina.startup.Bootstrap
wrapper.app.parameter.2=1
wrapper.app.parameter.3=start

# The start parameters are followed by the name of the class whose main
# method is to be called to stop the application.  The stop class name
# is followed by a flag which controls whether or not the Wrapper should
# wait for all non daemon threads to complete before exiting the JVM.
# The flag is followed by the number of parameters to be passed to the
# stop class's main method.  Finally comes the actual parameters.
wrapper.app.parameter.4=org.apache.catalina.startup.Bootstrap
wrapper.app.parameter.5=true
wrapper.app.parameter.6=1
wrapper.app.parameter.7=stop
