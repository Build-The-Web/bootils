#############################################################################
# Basic Java Service Wrapper Configuration
#############################################################################

set.default.JSW_SERVICE_NAME=tomcat8
set.default.JSW_PORT_PREFIX=543
set.default.JAVA_HOME=/usr/lib/jvm/java-8-oracle

#############################################################################
# Log levels
#############################################################################

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# Level for logging of JVM command line
wrapper.java.command.loglevel=NONE

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE


#############################################################################
# Wrapper Basics
#############################################################################

# Activate the wrapper's own logging?
wrapper.debug=FALSE

# Base directory for all relative paths
wrapper.working.dir=/var/lib/%JSW_SERVICE_NAME%

# Show a message after 10 sec system under load.
wrapper.timer_slow_threshold=10

# Lifecycle wait times
wrapper.startup.delay=0
wrapper.restart.delay=5

# Ports which the native wrapper code will attempt to connect to
wrapper.port=%JSW_PORT_PREFIX%90
wrapper.jvm.port=%JSW_PORT_PREFIX%91
wrapper.port.min=%JSW_PORT_PREFIX%95
wrapper.port.max=%JSW_PORT_PREFIX%99
wrapper.jvm.port.min=%JSW_PORT_PREFIX%95
wrapper.jvm.port.max=%JSW_PORT_PREFIX%99

# Status files (note that the wrapper.sh script overrides some of these)
wrapper.pidfile=/var/run/%JSW_SERVICE_NAME%/wrapper.pid
wrapper.statusfile=/var/run/%JSW_SERVICE_NAME%/wrapper.status
wrapper.java.pidfile=/var/run/%JSW_SERVICE_NAME%/java.pid
wrapper.java.idfile=/var/run/%JSW_SERVICE_NAME%/java.id
wrapper.java.statusfile=/var/run/%JSW_SERVICE_NAME%/java.status

# Stop the Java process after max. 30 secs if this file is somehow deleted
wrapper.anchorfile=/var/run/%JSW_SERVICE_NAME%/wrapper.anchor
wrapper.anchor.poll_interval=30

# Title to use when running as a console
wrapper.console.title=Bootils '%JSW_SERVICE_NAME%' Service

# The umask used when creating files
wrapper.umask=0022
wrapper.java.umask=0022
wrapper.logfile.umask=0022

# Timeouts
wrapper.ping.timeout=30
wrapper.cpu.timeout=10
wrapper.shutdown.timeout=30
wrapper.jvm_exit.timeout=15


#############################################################################
# Java & Application
#############################################################################

# Java Application
wrapper.java.command=%JAVA_HOME%/bin/java

# Java Main class.  This class must implement the WrapperListener interface
# or guarantee that the WrapperManager class is initialized.  Helper
# classes are provided to do this for you.  See the Integration section
# of the documentation for details.
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp

# Java Classpath (include wrapper.jar)
wrapper.java.classpath.1=/etc/%JSW_SERVICE_NAME%/lib
wrapper.java.classpath.2=/usr/share/java/wrapper.jar

# Java Library Path (location of libwrapper.so)
wrapper.java.library.path.1=/usr/lib/jni/libwrapper.so

# Java Additional Parameters
wrapper.java.additional.1=-Djava.awt.headless=true
##wrapper.java.additional.2=-Dcom.sun.management.config.file=/etc/%JSW_SERVICE_NAME%/jmx.management.properties
wrapper.java.additional.3=-XX:PermSize=48m
wrapper.java.additional.4=-XX:MaxPermSize=56m
wrapper.java.additional.5=-Djava.endorsed.dirs=/etc/%JSW_SERVICE_NAME%/endorsed
wrapper.java.additional.6=-Dorg.tanukisoftware.wrapper.WrapperManager.mbean=true

wrapper.java.additional.10=-Djava.security.egd=file:/dev/./urandom
##wrapper.java.additional.11=-javaagent:/usr/lib/java/jolokia-jvm-agent.jar=config=/etc/%JSW_SERVICE_NAME%/jolokia.properties

# GC logging
# CAUTION: File is opened by JVM for overwrite.
wrapper.java.additional.20=-Xloggc:/var/log/%JSW_SERVICE_NAME%/gc-trace.log
wrapper.java.additional.21=-verbose:gc
wrapper.java.additional.22=-XX:+PrintGC
wrapper.java.additional.23=-XX:+PrintGCTimeStamps
wrapper.java.additional.24=-XX:+PrintGCDateStamps

# Further -XX options
wrapper.java.additional.30=-XX:+UseNUMA
wrapper.java.additional.31=-XX:NewRatio=3

# Pass on some values to the JVM
wrapper.java.additional.40=-Djsw.service.name=%JSW_SERVICE_NAME%
wrapper.java.additional.41=-Djsw.port.prefix=%JSW_PORT_PREFIX%

# Initial Java Heap Size (in MB)
wrapper.java.initmemory=64

# Maximum Java Heap Size (in MB)
wrapper.java.maxmemory=384


#############################################################################
# Logging
#############################################################################

# Format of output for the console.  (See docs for formats)
wrapper.console.format=PM

# Log file to use for wrapper output logging.
wrapper.logfile=/var/log/%JSW_SERVICE_NAME%/wrapper.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=0

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=0

# New 3.2.0 logfile settings (mimic previous behaviour, important for external logrotate)
wrapper.logfile.inactivity.timeout=0
wrapper.logfile.rollmode=NONE

# Attempt to request a Thread Dump in the event that the JVM does not
# exit when requested
wrapper.request_thread_dump_on_failed_jvm_exit=TRUE


#############################################################################
# Overrides (include file are not required to exist)
#############################################################################

# Additional application configuration (specific to the service)
#include /etc/tomcat8/wrapper.service.conf

# Additional custom configuration (e.g. provided by configuration management)
#include /etc/tomcat8/wrapper.custom.conf

# Additional manual configuration (for debugging etc.)
#include /etc/tomcat8/wrapper.local.conf
